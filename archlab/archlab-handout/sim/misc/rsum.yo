                            | # Execution begins at address 0
0x000:                      |         .pos 0
0x000: 30f40002000000000000 |         irmovq stack, %rsp  # Set up stack pointer
0x00a: 804800000000000000   |         call main           # Execution main program
0x013: 00                   |         halt                
                            | # Sample linked list
0x018:                      |         .align 8
0x018:                      |     ele1:
0x018: 0a00000000000000     |         .quad 0x00a
0x020: 2800000000000000     |         .quad ele2
0x028:                      |     ele2:
0x028: b000000000000000     |         .quad 0x0b0
0x030: 3800000000000000     |         .quad ele3
0x038:                      |     ele3:
0x038: 000c000000000000     |         .quad 0xc00
0x040: 0000000000000000     |         .quad 0
                            | 
0x048:                      | main:
0x048: 30f71800000000000000 |         irmovq ele1,%rdi    # 传参数值
0x052: 805c00000000000000   |         call rsum_list      # 调用函数rsum_list(linklist)
0x05b: 90                   |         ret
0x05c:                      | rsum_list:
0x05c: 6277                 |         andq %rdi,%rdi
0x05e: 739700000000000000   |         je return
0x067: a03f                 |         pushq %rbx
0x069: 50370000000000000000 |         mrmovq (%rdi),%rbx
0x073: 30fc0800000000000000 |         irmovq $0x8,%r12
0x07d: 60c7                 |         addq %r12,%rdi
0x07f: 50770000000000000000 |         mrmovq (%rdi),%rdi
0x089: 805c00000000000000   |         call rsum_list
0x092: 6030                 |         addq %rbx,%rax
0x094: b03f                 |         popq %rbx
0x096: 90                   |         ret
0x097:                      | return: 
0x097: 30f00000000000000000 |         irmovq $0x0,%rax
0x0a1: 90                   |         ret
                            | # Stack starts here and grows to lower addresses
0x200:                      | .pos 0x200
0x200:                      | stack:
